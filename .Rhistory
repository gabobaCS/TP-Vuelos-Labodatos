}
freq = freq %>%
filter(Aeropuerto != Origen...Destino) %>%
arrange(desc(count))
require(ggplot2)
ggplot() +
geom_polygon(data = mapa, aes(x=long, y=lat, group=group), fill="#292929")+
geom_curve(data = freq, aes(x = aeropuerto.x,
y = aeropuerto.y,
xend = origen.destino.x,
yend = origen.destino.y,
color = count,
alpha = count),
size = 0.2, curvature = .1) +
coord_fixed(1.2) +
geom_point(data = aeropuertos, aes(x = x, y = y), color = "orange", size=0.5) +
scale_colour_gradientn(colours = cm.colors(4))+
theme(panel.background = element_rect(fill="white"),
axis.line = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank()
)
ggsave("Test9.pdf")
?aggregate
freq = freq %>%
# filter(Aeropuerto != Origen...Destino) %>%
arrange(desc(count))
eq$aeropuerto.x = NA
freq$aeropuerto.x = NA
freq$aeropuerto.y = NA
freq$origen.destino.x = NA
freq$origen.destino.y = NA
for (i in 1:nrow(freq)){
if(i %% 1000 == 0){
print(i)
}
aeropuerto = freq$Aeropuerto[i]
origen.destino = freq$Origen...Destino[i]
index.aeropuerto = which(aeropuertos$ana == aeropuerto)
index.origen.destino = which(aeropuertos$ana == origen.destino)
if(!is_empty(index.aeropuerto) && !is_empty(index.origen.destino)){
freq$aeropuerto.x[i] = aeropuertos$x[index.aeropuerto]
freq$aeropuerto.y[i] = aeropuertos$y[index.aeropuerto]
freq$origen.destino.x[i] = aeropuertos$x[index.origen.destino]
freq$origen.destino.y[i] = aeropuertos$y[index.origen.destino]
}
}
freq = freq %>%
# filter(Aeropuerto != Origen...Destino) %>%
arrange(desc(count))
freq = aggregate(count ~ ., freq, FUN = sum)
freq = domestico %>%
select(c(Aeropuerto, Origen...Destino))
freq$count = 1
freq = aggregate(count ~ ., freq, FUN = sum)
freq$aeropuerto.x = NA
freq$aeropuerto.y = NA
freq$origen.destino.x = NA
freq$origen.destino.y = NA
for (i in 1:nrow(freq)){
if(i %% 1000 == 0){
print(i)
}
aeropuerto = freq$Aeropuerto[i]
origen.destino = freq$Origen...Destino[i]
index.aeropuerto = which(aeropuertos$ana == aeropuerto)
index.origen.destino = which(aeropuertos$ana == origen.destino)
if(!is_empty(index.aeropuerto) && !is_empty(index.origen.destino)){
freq$aeropuerto.x[i] = aeropuertos$x[index.aeropuerto]
freq$aeropuerto.y[i] = aeropuertos$y[index.aeropuerto]
freq$origen.destino.x[i] = aeropuertos$x[index.origen.destino]
freq$origen.destino.y[i] = aeropuertos$y[index.origen.destino]
}
}
freq = freq %>%
# filter(Aeropuerto != Origen...Destino) %>%
arrange(desc(count))
summary(freq$count)
domestico %>%
filter(Aeropuerto == "MOR",
Origen...Destino == "MOR")
lenght(unique(domestico$Aeropuerto))
size(unique(domestico$Aeropuerto))
unique(domestico$Aeropuerto)
unique(domestico$Origen...Destino)
require(geosphere)
domestico$distancia = NA
domestico$aeropuerto.x = NA
domestico$aeropuerto.y = NA
domestico$origen.destino.x = NA
domestico$origen.destino.y = NA
for (i in 1:nrow(domestico)){
if(i %% 1000 == 0){
print(i)
}
aeropuerto = domestico$Aeropuerto[i]
origen.destino = domestico$Origen...Destino[i]
index.aeropuerto = which(aeropuertos$ana == aeropuerto)
index.origen.destino = which(aeropuertos$ana == origen.destino)
if(!is_empty(index.aeropuerto) && !is_empty(index.origen.destino)){
latlong.aeropuerto = c(aeropuertos$x[index.aeropuerto], aeropuertos$y[index.aeropuerto])
latlong.origen.destino = c(aeropuertos$x[index.origen.destino], aeropuertos$y[index.origen.destino])
domestico$distancia[i] = distHaversine(latlong.origen.destino, latlong.aeropuerto)
# domestico$aeropuerto.x[i] = aeropuertos$x[index.aeropuerto]
# domestico$aeropuerto.y[i] = aeropuertos$y[index.aeropuerto]
#
# domestico$origen.destino.x[i] = aeropuertos$x[index.origen.destino]
# domestico$origen.destino.y[i] = aeropuertos$y[index.origen.destino]
}
}
domestico %>%
filter(is.na(distancia))
Head(domestico %>%
filter(is.na(distancia)))
head(domestico %>%
filter(is.na(distancia)))
head(domestico %>%
filter(is.na(distancia)))
unique(domestico %>%
filter(is.na(distancia))$Aeropuerto)
t =  domestico %>%
filter(is.na(distancia))
l1 = unique(t$Aeropuerto)
l2 = unique(t$Origen...Destino)
which(aeropuertos$ana == "ssdfsdf")
contador = 0
for (i in i:lenght(l1)){
aeropuerto = l1[i]
if (which(aeropuertos$ana == aeropuerto) == 0){
contador = contador + 1
}
}
for (i in i:size(l1)){
aeropuerto = l1[i]
if (which(aeropuertos$ana == aeropuerto) == 0){
contador = contador + 1
}
}
length(l1)
for (i in 1:length(l1)){
aeropuerto = l1[i]
if (which(aeropuertos$ana == aeropuerto) == 0){
contador = contador + 1
}
}
?which
is.na(which(aeropuertos$ana == "sfd"))
which(aeropuertos$ana == "sfd")
length(which(aeropuertos$ana == "sfd"))
faltantes = c()
faltantes = c()
contador = 0
for (i in 1:length(l1)){
aeropuerto = l1[i]
if (length(aeropuertos$ana == aeropuerto) == 0){
contador = contador + 1
faltantes = c(faltantes, aeropuerto)
}
}
length(which(aeropuertos$ana == "sfd")) == 0
for (i in 1:length(l2)){
aeropuerto = l2[i]
if (length(aeropuertos$ana == aeropuerto) == 0){
contador = contador + 1
faltantes = c(faltantes, aeropuerto)
}
}
faltantes = c()
contador = 0
for (i in 1:length(l1)){
aeropuerto = l1[i]
if (length(aeropuertos$ana[i] == aeropuerto) == 0){
contador = contador + 1
faltantes = c(faltantes, aeropuerto)
}
}
for (i in 1:length(l2)){
aeropuerto = l2[i]
if (length(aeropuertos$ana[i] == aeropuerto) == 0){
contador = contador + 1
faltantes = c(faltantes, aeropuerto)
}
}
?arrayInd
faltantes = c()
contador = 0
for (i in 1:length(l1)){
aeropuerto = l1[i]
if (length(which(aeropuertos$ana == aeropuerto)) == 0){
contador = contador + 1
faltantes = c(faltantes, aeropuerto)
}
}
for (i in 1:length(l2)){
aeropuerto = l2[i]
if (length(which(aeropuertos$ana == aeropuerto)) == 0){
contador = contador + 1
faltantes = c(faltantes, aeropuerto)
}
}
faltantes
View(domestico)
View(df1)
unique(domestico$Aeronave)
table(domestico$Aerolinea.Nombre)
View(able(domestico$Aerolinea.Nombre))
View(table(domestico$Aerolinea.Nombre))
ggplot() +
geom_histogram(data = freq, aes(count))
ggplot() +
geom_histogram(data = freq, aes(Aeropuerto))
ggplot() +
geom_histogram(data = freq, aes(Aeropuerto))
ggplot() +
geom_histogram(data = freq, aes(x = Aeropuerto))
aeropuertos = read.csv("sna_abril_2021.csv", encoding = "UTF-8")
require(tidyverse)
require(lubridate)
df1 <- read.csv("202109-informe-ministerio.csv", sep=";", encoding = "UTF-8")
df1 =
df1 %>%
mutate(Datetime = dmy_hm(paste(Fecha, Hora.UTC))) %>%
relocate(Datetime)
domestico =  df1 %>%
filter(ClasificaciÃ³n.Vuelo == "Dom",
Aeropuerto != "VRU",
Origen...Destino != "VRU",
Origen...Destino != "CHJ")
unique(domestico$Aerolinea.Nombre)
subset = domestico[1:20,]
View(subset)
require(ggplot2)
subset = domestico[1:20,]
ggplot()
ggplot(data = subset) +
geom_point(aes(x = Datetime, y = hora.UTC))
ggplot(data = subset) +
geom_point(aes(x = Datetime, y = Hora.UTC))
subset = domestico[1:1000,]
ggplot(data = subset) +
geom_point(aes(x = Datetime, y = Hora.UTC))
vuelos.mes = domestico
vuelos.mes[1,1]
format(vuelos.mes[1,1], format = "%y")
format(vuelos.mes[1,1], format = "%m")
vuelos.mes = vuelos.mes %>%
mutate(mes = format(vuelos.mes[1,1], format = "%m"))
View(vuelos.mes)
vuelos.mes = vuelos.mes %>%
mutate(mes = format(vuelos.mes[1,1], format = "%m")) %>%
select(mes)
vuelos.mes = vuelos.mes %>%
mutate(mes = format(vuelos.mes[1,1], format = "%m")) %>%
select(mes, everything())
vuelos.mes = domestico
vuelos.mes = vuelos.mes %>%
mutate(mes = format(vuelos.mes[1,1], format = "%m")) %>%
select(mes, everything())
table(vuelos.mes$mes)
vuelos.mes = domestico
vuelos.mes = vuelos.mes %>%
mutate(mes = format(mes, format = "%m")) %>%
select(mes, everything())
vuelos.mes = domestico
vuelos.mes = vuelos.mes %>%
mutate(mes = format(Datetime, format = "%m")) %>%
select(mes, everything())
table(vuelos.mes$mes)
ggplot(data = vuelos.mes) +
geom_point(aes(x = mes, y = Aerolinea.nombre))
ggplot(data = vuelos.mes) +
geom_point(aes(x = mes, y = Aerolinea.Nombre))
table(vuelos.mes$mes, vuelos.mes$Aerolinea.Nombre)
?aggregate
vuelos.mes %>%
aggregate(mes ~ Aerolinea.Nombre)
vuelos.mes %>%
aggregate(mes ~ Aerolinea.Nombre, sum)
vuelos.mes = vuelos.mes %>%
mutate(mes = format(Datetime, format = "%m")) %>%
select(mes, everything())
aggregate(mes ~ Aerolinea.Nombre,  vuelos.mes ,sum)
aggregate(mes ~ Aerolinea.Nombre,  data = vuelos.mes, sum)
aggregate(mes ~ Aerolinea.Nombre,  data = vuelos.mes, "sum" )
aggregate(Aerolinea.Nombre ~ mes,  data = vuelos.mes, sum)
vuelos.mes %>%
group_by(mes, Aerolinea.Nombre)
vuelos.mes %>%
group_by(mes, Aerolinea.Nombre) %>%
summarise_each(funs(sum))
vuelos.mes %>%
group_by(Aerolinea.Nombre) %>%
summarise_each(funs(sum))
vuelos.mes %>%
group_by(mes) %>%
summarise_each(funs(sum))
?table
table(vuelos.mes$mes, vuelos.mes$Aerolinea.Nombre)
View(table(vuelos.mes$mes, vuelos.mes$Aerolinea.Nombre))
freq.mes.aero = table(vuelos.mes$mes, vuelos.mes$Aerolinea.Nombre)
freq.mes.aero = table(vuelos.mes$mes, Hora.UTCm vuelos.mes$Aerolinea.Nombre)
freq.mes.aero = table(vuelos.mes$mes, Hora.UTC, vuelos.mes$Aerolinea.Nombre)
freq.mes.aero = table(vuelos.mes$mes, vuelos.mes$Hora.UTC, vuelos.mes$Aerolinea.Nombre)
freq.mes.aero = table(vuelos.mes$mes, vuelos.mes$Hora.UTC, vuelos.mes$Aerolinea.Nombre)
View(freq.mes.aero)
colnames(freq.mes.aero) = c("mes", "hora", "aerolinea", "frecuencia")
freq.mes.aero = table(vuelos.mes$mes, vuelos.mes$Hora.UTC, vuelos.mes$Aerolinea.Nombre)
colnames(freq.mes.aero) = c("mes", "hora", "aerolinea", "frecuencia")
colnames(freq.mes.aero)
freq.mes.aero = data.frame(table(vuelos.mes$mes, vuelos.mes$Hora.UTC, vuelos.mes$Aerolinea.Nombre))
colnames(freq.mes.aero)
colnames(freq.mes.aero) = c("mes", "hora", "aerolinea", "frecuencia")
freq.mes.aero = freq.mes.aero %>%
filter(aerolinea == "Aerolineas Argentinas")
freq.mes.aero = data.frame(table(vuelos.mes$mes, vuelos.mes$Hora.UTC, vuelos.mes$Aerolinea.Nombre))
colnames(freq.mes.aero) = c("mes", "hora", "aerolinea", "frecuencia")
freq.mes.aero = freq.mes.aero %>%
filter(aerolinea == "AEROLINEAS ARGENTINAS SA")
ggplot(data = freq.mes.aero) +
geom_point(aes(x = hora, y = frecuencia))
ggplot(data = freq.mes.aero) +
geom_point(aes(x = mes, y = frecuencia))
ggplot(data = freq.mes.aero) +
geom_point(aes(x = mes, y = frecuencia)) +
facet_wrap(~ hora)
ggplot(data = freq.mes.aero) +
geom_point(aes(x = hora, y = frecuencia)) +
facet_wrap(~ mes)
ggplot(data = freq.mes.aero) +
geom_point(aes(x = hora, y = frecuencia))
ggplot(data = freq.mes.aero) +
geom_point(aes(x = hora, y = mes))
freq.mes.aero = freq.mes.aero %>%
filter(aerolinea == "AEROLINEAS ARGENTINAS SA", mes == 01)
freq.mes.aero = data.frame(table(vuelos.mes$mes, vuelos.mes$Hora.UTC, vuelos.mes$Aerolinea.Nombre))
colnames(freq.mes.aero) = c("mes", "hora", "aerolinea", "frecuencia")
freq.mes.aero = freq.mes.aero %>%
filter(aerolinea == "AEROLINEAS ARGENTINAS SA", mes == "01")
vuelos.mes = vuelos.mes %>%
mutate(mes = format(Datetime, format = "%m"), dia = format(Datetime, format = "%d")) %>%
select(mes, everything())
vuelos.mes = vuelos.mes %>%
mutate(mes = format(Datetime, format = "%m"), dia = format(Datetime, format = "%d")) %>%
select(dia, mes, everything())
freq.mes.aero = data.frame(table(vuelos$dia, vuelos.mes$mes, vuelos.mes$Hora.UTC, vuelos.mes$Aerolinea.Nombre))
freq.mes.aero = data.frame(table(vuelos.mes$dia, vuelos.mes$mes, vuelos.mes$Hora.UTC, vuelos.mes$Aerolinea.Nombre))
freq.mes.aero = data.frame(table(vuelos.mes$dia, vuelos.mes$mes, vuelos.mes$Aerolinea.Nombre))
colnames(freq.mes.aero) = c("dia", "mes", "aerolinea", "frecuencia")
freq.mes.aero = freq.mes.aero %>%
filter(aerolinea == "AEROLINEAS ARGENTINAS SA")
ggplot(data = freq.mes.aero) +
geom_point(aes(x = dia, y = frecuencia)) +
facet_wrap(~ mes)
freq.mes.aero = data.frame(table(vuelos.mes$dia, vuelos.mes$mes))
colnames(freq.mes.aero) = c("dia", "mes", "aerolinea", "frecuencia")
vuelos.mes = vuelos.mes %>%
mutate(mes = format(Datetime, format = "%m"), dia = format(Datetime, format = "%d")) %>%
select(dia, mes, everything())
freq.mes.aero = data.frame(table(vuelos.mes$dia, vuelos.mes$mes))
colnames(freq.mes.aero) = c("dia", "mes", "frecuencia")
ggplot(data = freq.mes.aero) +
geom_point(aes(x = dia, y = frecuencia)) +
facet_wrap(~ mes)
ggplot(data = freq.mes.aero) +
geom_line(aes(x = dia, y = frecuencia)) +
facet_wrap(~ mes)
ggplot(data = freq.mes.aero) +
geom_point(aes(x = dia, y = frecuencia)) +
facet_wrap(~ mes)
require(ggplot2)
vuelos.mes = domestico
vuelos.mes = vuelos.mes %>%
mutate(mes = format(Datetime, format = "%m"), dia = format(Datetime, format = "%d")) %>%
select(dia, mes, everything())
freq.mes.aero = data.frame(table(vuelos.mes$dia, vuelos.mes$mes))
colnames(freq.mes.aero) = c("dia", "mes", "frecuencia")
ggplot(data = freq.mes.aero) +
geom_point(aes(x = dia, y = frecuencia)) +
facet_wrap(~ mes)
# facet_wrap(~ D, scales = "free_x")
ggplot(data = freq.mes.aero) +
geom_point(aes(x = dia, y = frecuencia)) +
facet_wrap(~ mes, scales= "free_x")
ggplot(data = freq.mes.aero) +
geom_point(aes(x = dia, y = frecuencia)) +
facet_wrap(~ mes, scales= "free_x") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
require(ggplot2)
vuelos.mes = domestico
vuelos.mes = vuelos.mes %>%
mutate(mes = format(Datetime, format = "%m"), dia = format(Datetime, format = "%d")) %>%
select(dia, mes, everything())
freq.mes.aero = data.frame(table(vuelos.mes$dia, vuelos.mes$mes))
colnames(freq.mes.aero) = c("dia", "mes", "frecuencia")
ggplot(data = freq.mes.aero) +
geom_point(aes(x = dia, y = frecuencia)) +
facet_wrap(~ mes, scales= "free_x") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
# facet_wrap(~ D, scales = "free_x")
require(ggplot2)
vuelos.mes = domestico
vuelos.mes = vuelos.mes %>%
mutate(mes = format(Datetime, format = "%m"), dia = format(Datetime, format = "%d")) %>%
select(dia, mes, everything())
freq.mes.aero = data.frame(table(vuelos.mes$dia, vuelos.mes$mes))
colnames(freq.mes.aero) = c("dia", "mes", "frecuencia")
ggplot(data = freq.mes.aero) +
geom_point(aes(x = dia, y = frecuencia)) +
facet_wrap(~ mes, scales= "free_x") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
# facet_wrap(~ D, scales = "free_x")
ggplot(data = freq.mes.aero) +
geom_line(aes(x = dia, y = frecuencia)) +
facet_wrap(~ mes, scales= "free_x") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
ggplot(data = freq.mes.aero) +
geom_line(aes(x = dia, y = frecuencia, group=1)) +
facet_wrap(~ mes, scales= "free_x") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
quantile(freq.mes.aero)
summary(freq.mes.aero)
summary(freq.mes.aero$frecuencia)
ggplot(data = freq.mes.aero) +
geom_line(aes(x = dia, y = frecuencia, group=1)) +
facet_wrap(~ mes, scales= "free_x") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
quantile(freq.mes.aero$frecuencia)
cuartiles.freq = quantile(freq.mes.aero$frecuencia)
ggplot(data = freq.mes.aero) +
geom_line(aes(x = dia, y = frecuencia, group=1)) +
geom_hline(data = cuartiles.freq, aes(y = cuartiles.freq))
ggplot(data = freq.mes.aero) +
geom_line(aes(x = dia, y = frecuencia, group=1)) +
geom_hline(data = cuartiles.freq, aes(y = cuartiles.freq)) +
facet_wrap(~ mes, scales= "free_x") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
?geom_hline
ggplot(data = freq.mes.aero) +
geom_line(aes(x = dia, y = frecuencia, group=1)) +
geom_hline(cuartiles.freq) +
facet_wrap(~ mes, scales= "free_x") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
ggplot(data = freq.mes.aero) +
geom_line(aes(x = dia, y = frecuencia, group=1)) +
geom_hline(yintercept = cuartiles.freq) +
facet_wrap(~ mes, scales= "free_x") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
ggplot(data = freq.mes.aero) +
geom_line(aes(x = dia, y = frecuencia, group=1)) +
geom_hline(yintercept = cuartiles.freq, color = rainbow(4)) +
facet_wrap(~ mes, scales= "free_x") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
ggplot(data = freq.mes.aero) +
geom_line(aes(x = dia, y = frecuencia, group=1)) +
geom_hline(yintercept = cuartiles.freq) +
facet_wrap(~ mes, scales= "free_x") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
cuartiles.freq = data.frame(cuartil = quantile(freq.mes.aero$frecuencia), color = rainbow(5))
View(cuartiles.freq)
ggplot(data = freq.mes.aero) +
geom_line(aes(x = dia, y = frecuencia, group=1)) +
geom_hline(data = cuartile.freq, yintercept = cuartiles.freq, aes(color = color)) +
facet_wrap(~ mes, scales= "free_x") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
?geom_hline
ggplot(data = freq.mes.aero) +
geom_line(aes(x = dia, y = frecuencia, group=1)) +
geom_hline(data = cuartiles.freq, aes(y= cuartil,color = color)) +
facet_wrap(~ mes, scales= "free_x") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
ggplot(data = freq.mes.aero) +
geom_line(aes(x = dia, y = frecuencia, group=1)) +
geom_hline(data = cuartiles.freq, aes(yintercept = cuartil,color = color)) +
facet_wrap(~ mes, scales= "free_x") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
?ggsave
require(ggplot2)
vuelos.mes = domestico
vuelos.mes = vuelos.mes %>%
mutate(mes = format(Datetime, format = "%m"), dia = format(Datetime, format = "%d")) %>%
select(dia, mes, everything())
freq.mes.aero = data.frame(table(vuelos.mes$dia, vuelos.mes$mes))
colnames(freq.mes.aero) = c("dia", "mes", "frecuencia")
cuartiles.freq = data.frame(cuartil = quantile(freq.mes.aero$frecuencia), color = rainbow(5))
ggplot(data = freq.mes.aero) +
geom_line(aes(x = dia, y = frecuencia, group=1)) +
geom_hline(data = cuartiles.freq, aes(yintercept = cuartil,color = color)) +
facet_wrap(~ mes, scales= "free_x") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
ggsave(path = "frecuencia", filename = "frecuencia_dia.pdf")
require(ggplot2)
vuelos.mes = domestico
vuelos.mes = vuelos.mes %>%
mutate(mes = format(Datetime, format = "%m"), dia = format(Datetime, format = "%d")) %>%
select(dia, mes, everything())
freq.mes.aero = data.frame(table(vuelos.mes$dia, vuelos.mes$mes))
colnames(freq.mes.aero) = c("dia", "mes", "frecuencia")
cuartiles.freq = data.frame(cuartil = quantile(freq.mes.aero$frecuencia), color = rainbow(5))
ggplot(data = freq.mes.aero) +
geom_line(aes(x = dia, y = frecuencia, group=1)) +
geom_hline(data = cuartiles.freq, aes(yintercept = cuartil,color = color)) +
facet_wrap(~ mes, scales= "free_x") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
ggsave(path = "frecuencia", filename = "frecuencia_dia.pdf")
setwd("C:/Users/PC/Desktop/scrap")
graph = read.csv("scrap.txt")
view(graph)
View(graph)
setwd("C:/Users/PC/Desktop/Bernie/Gabo/UBA/Materias/Laboratorio de Datos/Guias de TPs/TP-Vuelos-Labodatos")
